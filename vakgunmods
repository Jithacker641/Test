local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\184\149","\50\150\187\45"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,2 -1 ,1));return "";else local v100=0;local v101;while true do if (v100==0) then v101=v10(v8(v42,16));if v30 then local v121=v13(v101,v30);v30=nil;return v121;else return v101;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v102=0;local v103;while true do if (v102==0) then v103=(v43/(2^(v44-1)))%((1 + 1)^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;end end else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * (732 -476)) + v50 ;end local function v35() local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (3==v54) then if (v59==0) then if (v58==(0 + 0)) then return v60 * 0 ;else v59=1;v57=772 -(201 + 571) ;end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end if (v54==1) then v57=1;v58=(v31(v56,1,20) * (2^32)) + v55 ;v54=2;end if (v54==2) then v59=v31(v56,21,31);v60=((v31(v56,32)==1) and  -1) or 1 ;v54=3;end if (v54==0) then v55=v34();v56=v34();v54=1;end end end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==2) then v64={};for v112=1 -0 , #v63 do v64[v112]=v10(v9(v11(v63,v112,v112)));end v62=3;end if (3==v62) then return v14(v64);end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==(1139 -(116 + 1022))) then v80=v32()~=0 ;elseif (v79==(621 -(555 + 64))) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[12 -9 ]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,932 -(857 + 74) ,1)==0) then local v108=0;local v109;local v110;local v111;while true do if (v108==1) then v111={v33(),v33(),nil,nil};if (v109==0) then local v122=0;while true do if (v122==0) then v111[3]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[2 + 1 ]=v34();elseif (v109==2) then v111[1 + 2 ]=v34() -(2^16) ;elseif (v109==3) then v111[3]=v34() -(2^16) ;v111[4]=v33();end v108=2;end if (v108==0) then v109=v31(v83,2,3);v110=v31(v83,4,6);v108=1;end if (2==v108) then if (v31(v110,1,3 -2 )==1) then v111[2]=v70[v111[1 + 1 ]];end if (v31(v110,879 -(282 + 595) ,2)==(3 -2)) then v111[3]=v70[v111[862 -(814 + 45) ]];end v108=3;end if (v108==3) then if (v31(v110,3,3)==1) then v111[4]=v70[v111[4]];end v65[v82]=v111;break;end end end end for v84=1,v34() do v66[v84-(1638 -(1523 + 114)) ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2 + 0 ];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -(1 -0) ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v107=0;while true do if (v107==0) then v98=v86[v90];v99=v98[1];v107=1;end if (1==v107) then if (v99<=47) then if (v99<=23) then if (v99<=11) then if (v99<=5) then if (v99<=2) then if (v99<=0) then v96[v98[2]]=v98[7 -4 ];elseif (v99==1) then v96[v98[2]]();else for v351=v98[2],v98[3] do v96[v351]=nil;end end elseif (v99<=3) then if v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==(1069 -(68 + 997))) then local v228=v98[2];v96[v228]=v96[v228](v96[v228 + 1 ]);else v96[v98[2]]=v96[v98[3]];end elseif (v99<=8) then if (v99<=(1 + 5)) then for v205=v98[2],v98[3] do v96[v205]=nil;end elseif (v99==7) then local v232=0;local v233;local v234;local v235;while true do if (0==v232) then v233=v98[2];v234={v96[v233](v21(v96,v233 + 1 ,v91))};v232=1;end if (v232==1) then v235=1270 -(226 + 1044) ;for v433=v233,v98[4] do local v434=0;while true do if (0==v434) then v235=v235 + 1 ;v96[v433]=v234[v235];break;end end end break;end end else local v236=0;local v237;local v238;local v239;local v240;while true do if (1==v236) then v91=(v239 + v237) -(1 + 0) ;v240=0;v236=2;end if (v236==2) then for v435=v237,v91 do v240=v240 + 1 ;v96[v435]=v238[v240];end break;end if (v236==0) then v237=v98[2];v238,v239=v89(v96[v237](v21(v96,v237 + 1 ,v98[3])));v236=1;end end end elseif (v99<=9) then local v137=0;local v138;while true do if (v137==0) then v138=v98[2];v96[v138](v96[v138 + 1 ]);break;end end elseif (v99==10) then local v241=v98[2];v96[v241]=v96[v241](v21(v96,v241 + 1 ,v91));else v96[v98[8 -6 ]]=v98[3] + v96[v98[4]] ;end elseif (v99<=17) then if (v99<=14) then if (v99<=12) then if (v96[v98[887 -(261 + 624) ]]==v98[6 -2 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>13) then local v245=v98[2];v96[v245](v21(v96,v245 + 1 ,v98[3]));elseif (v98[2]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[1083 -(1020 + 60) ];end elseif (v99<=15) then local v139=v98[2];v96[v139]=v96[v139]();elseif (v99==16) then v96[v98[2]]=v73[v98[3]];else local v248=0;local v249;while true do if (0==v248) then v249=v98[2];v96[v249](v96[v249 + (118 -(32 + 85)) ]);break;end end end elseif (v99<=20) then if (v99<=18) then v96[v98[1425 -(630 + 793) ]][v98[3]]=v96[v98[4]];elseif (v99>19) then local v250=0;local v251;local v252;local v253;while true do if (v250==0) then v251=v87[v98[3]];v252=nil;v250=1;end if (v250==1) then v253={};v252=v18({},{[v7("\76\35\122\165\114\118\4","\22\19\124\19\203")]=function(v438,v439) local v440=0;local v441;while true do if (v440==0) then v441=v253[v439];return v441[1][v441[2]];end end end,[v7("\254\45\3\240\21\121\183\197\23\21","\217\161\114\109\149\98\16")]=function(v442,v443,v444) local v445=0;local v446;while true do if (v445==0) then v446=v253[v443];v446[1][v446[2]]=v444;break;end end end});v250=2;end if (v250==2) then for v447=1 + 0 ,v98[4] do local v448=0;local v449;while true do if (v448==0) then v90=v90 + 1 ;v449=v86[v90];v448=1;end if (1==v448) then if (v449[1]==(182 -128)) then v253[v447-1 ]={v96,v449[14 -11 ]};else v253[v447-1 ]={v73,v449[3]};end v95[ #v95 + 1 ]=v253;break;end end end v96[v98[2]]=v40(v251,v252,v74);break;end end elseif (v96[v98[2]]==v98[2 + 2 ]) then v90=v90 + 1 ;else v90=v98[1 + 2 ];end elseif (v99<=(978 -(892 + 65))) then local v143=v98[2];local v144=v96[v98[3]];v96[v143 + 1 ]=v144;v96[v143]=v144[v98[4]];elseif (v99>22) then local v254=v98[2];local v255,v256=v89(v96[v254](v96[v254 + (2 -1) ]));v91=(v256 + v254) -1 ;local v257=0;for v354=v254,v91 do v257=v257 + 1 ;v96[v354]=v255[v257];end else v96[v98[3 -1 ]][v98[3]]=v96[v98[4]];end elseif (v99<=(120 -85)) then if (v99<=(1776 -(760 + 987))) then if (v99<=26) then if (v99<=24) then v96[v98[1915 -(1789 + 124) ]]=v74[v98[3]];elseif (v99==25) then local v260=0;local v261;local v262;while true do if (v260==1) then for v450=1, #v95 do local v451=v95[v450];for v464=0, #v451 do local v465=v451[v464];local v466=v465[1 -0 ];local v467=v465[2];if ((v466==v96) and (v467>=v261)) then v262[v467]=v466[v467];v465[1]=v262;end end end break;end if (v260==0) then v261=v98[768 -(745 + 21) ];v262={};v260=1;end end else local v263=v98[2];v96[v263]=v96[v263](v96[v263 + 1 ]);end elseif (v99<=27) then local v150=v98[352 -(87 + 263) ];v96[v150]=v96[v150](v21(v96,v150 + 1 ,v91));elseif (v99>28) then if (v98[182 -(67 + 113) ]<v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else do return v96[v98[2]]();end end elseif (v99<=32) then if (v99<=30) then local v152=0;local v153;local v154;local v155;while true do if (v152==0) then v153=v98[2 + 0 ];v154={v96[v153](v21(v96,v153 + 1 ,v98[11 -8 ]))};v152=1;end if (v152==1) then v155=0;for v376=v153,v98[4] do local v377=0;while true do if (v377==0) then v155=v155 + 1 + 0 ;v96[v376]=v154[v155];break;end end end break;end end elseif (v99>31) then do return v96[v98[4 -2 ]]();end else local v265=0;local v266;local v267;local v268;while true do if (v265==0) then v266=v98[2 + 0 ];v267={v96[v266](v21(v96,v266 + 1 ,v98[3]))};v265=1;end if (v265==1) then v268=0;for v452=v266,v98[4] do v268=v268 + 1 + 0 ;v96[v452]=v267[v268];end break;end end end elseif (v99<=33) then v96[v98[2]]=v73[v98[3]];elseif (v99==34) then local v269=v98[2];v96[v269](v21(v96,v269 + 1 ,v98[3]));else local v270=v98[2];do return v96[v270](v21(v96,v270 + 1 ,v98[3]));end end elseif (v99<=41) then if (v99<=38) then if (v99<=36) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif (v99>37) then v96[v98[2]]=v96[v98[1058 -(87 + 968) ]]%v96[v98[17 -13 ]] ;else local v272=0;local v273;local v274;local v275;while true do if (v272==0) then v273=v98[2];v274=v96[v273];v272=1;end if (v272==1) then v275=v96[v273 + 2 ];if (v275>0) then if (v274>v96[v273 + 1 ]) then v90=v98[3];else v96[v273 + 3 ]=v274;end elseif (v274<v96[v273 + 1 ]) then v90=v98[3];else v96[v273 + 3 ]=v274;end break;end end end elseif (v99<=39) then v96[v98[2]][v96[v98[3]]]=v98[15 -11 ];elseif (v99>40) then local v276=v98[2];local v277={};for v358=1, #v95 do local v359=0;local v360;while true do if (v359==0) then v360=v95[v358];for v470=0, #v360 do local v471=v360[v470];local v472=v471[1];local v473=v471[2];if ((v472==v96) and (v473>=v276)) then local v490=0;while true do if (v490==0) then v277[v473]=v472[v473];v471[953 -(802 + 150) ]=v277;break;end end end end break;end end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[7 -4 ];end elseif (v99<=44) then if (v99<=42) then local v162=0;local v163;local v164;local v165;local v166;while true do if (1==v162) then v91=(v165 + v163) -1 ;v166=0;v162=2;end if (v162==2) then for v379=v163,v91 do local v380=0;while true do if (v380==0) then v166=v166 + 1 ;v96[v379]=v164[v166];break;end end end break;end if (v162==0) then v163=v98[2];v164,v165=v89(v96[v163](v96[v163 + 1 ]));v162=1;end end elseif (v99==43) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end else local v278=0;local v279;while true do if (v278==0) then v279=v98[2];do return v96[v279](v21(v96,v279 + 1 ,v98[3]));end break;end end end elseif (v99<=45) then local v167=0;local v168;local v169;local v170;while true do if (v167==1) then v170=0;for v382=v168,v98[8 -4 ] do v170=v170 + 1 + 0 ;v96[v382]=v169[v170];end break;end if (v167==0) then v168=v98[2];v169={v96[v168](v96[v168 + (1 -0) ])};v167=1;end end elseif (v99>46) then local v280=v98[2];local v281={v96[v280](v96[v280 + 1 ])};local v282=0;for v363=v280,v98[4] do v282=v282 + 1 ;v96[v363]=v281[v282];end else local v283=v98[2];v96[v283]=v96[v283]();end elseif (v99<=(1068 -(915 + 82))) then if (v99<=(1472 -(447 + 966))) then if (v99<=53) then if (v99<=50) then if (v99<=48) then local v171=v98[2];local v172=v98[10 -6 ];local v173=v171 + 2 ;local v174={v96[v171](v96[v171 + 1 ],v96[v173])};for v207=1818 -(1703 + 114) ,v172 do v96[v173 + v207 ]=v174[v207];end local v175=v174[702 -(376 + 325) ];if v175 then local v285=0;while true do if (v285==0) then v96[v173]=v175;v90=v98[3];break;end end else v90=v90 + (2 -1) ;end elseif (v99>49) then v90=v98[3];else v96[v98[2 + 0 ]][v96[v98[3 -0 ]]]=v96[v98[4]];end elseif (v99<=(83 -32)) then v96[v98[2]]=v96[v98[3]] + v98[4] ;elseif (v99>52) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + (2 -1) ;else v90=v98[1 + 2 ];end else v96[v98[1189 -(1069 + 118) ]]= #v96[v98[3]];end elseif (v99<=56) then if (v99<=54) then v96[v98[2]]=v96[v98[3]];elseif (v99>55) then do return;end else local v290=0;local v291;local v292;local v293;while true do if (v290==2) then if (v292>0) then if (v293<=v96[v291 + 1 ]) then local v491=0;while true do if (0==v491) then v90=v98[3];v96[v291 + (6 -3) ]=v293;break;end end end elseif (v293>=v96[v291 + 1 ]) then v90=v98[3];v96[v291 + 3 ]=v293;end break;end if (v290==1) then v293=v96[v291] + v292 ;v96[v291]=v293;v290=2;end if (v290==0) then v291=v98[2];v292=v96[v291 + 2 ];v290=1;end end end elseif (v99<=(71 -(9 + 5))) then local v179=v98[2];local v180,v181=v89(v96[v179](v21(v96,v179 + (377 -(85 + 291)) ,v91)));v91=(v181 + v179) -(2 -1) ;local v182=0;for v210=v179,v91 do v182=v182 + 1 ;v96[v210]=v180[v182];end elseif (v99>58) then v96[v98[7 -5 ]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=65) then if (v99<=62) then if (v99<=60) then local v183=0;local v184;local v185;local v186;local v187;while true do if (v183==0) then v184=v98[2];v185,v186=v89(v96[v184](v21(v96,v184 + 1 ,v91)));v183=1;end if (v183==2) then for v386=v184,v91 do v187=v187 + 1 ;v96[v386]=v185[v187];end break;end if (1==v183) then v91=(v186 + v184) -(1 -0) ;v187=0 + 0 ;v183=2;end end elseif (v99>61) then local v297=0;local v298;while true do if (v297==0) then v298=v98[2 + 0 ];v96[v298](v21(v96,v298 + 1 ,v91));break;end end else local v299=0;local v300;local v301;local v302;while true do if (v299==0) then v300=v98[2];v301=v96[v300];v299=1;end if (v299==1) then v302=v96[v300 + 2 ];if (v302>0) then if (v301>v96[v300 + 1 ]) then v90=v98[3];else v96[v300 + 3 ]=v301;end elseif (v301<v96[v300 + (1181 -(1123 + 57)) ]) then v90=v98[3];else v96[v300 + 3 + 0 ]=v301;end break;end end end elseif (v99<=63) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==64) then v96[v98[3 -1 ]]=v74[v98[3 + 0 ]];else v96[v98[1932 -(1869 + 61) ]]={};end elseif (v99<=68) then if (v99<=66) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + (792 -(368 + 423)) ;else v90=v98[3];end elseif (v99>67) then local v307=0;local v308;local v309;local v310;while true do if (v307==1) then v310=0;for v456=v308,v98[4] do local v457=0;while true do if (v457==0) then v310=v310 + 1 ;v96[v456]=v309[v310];break;end end end break;end if (v307==0) then v308=v98[1 + 1 ];v309={v96[v308](v21(v96,v308 + 1 ,v91))};v307=1;end end else v96[v98[2]]= #v96[v98[3]];end elseif (v99<=69) then local v190=v98[2];local v191=v98[5 -1 ];local v192=v190 + 2 ;local v193={v96[v190](v96[v190 + 1 + 0 ],v96[v192])};for v213=1,v191 do v96[v192 + v213 ]=v193[v213];end local v194=v193[1 -0 ];if v194 then v96[v192]=v194;v90=v98[3];else v90=v90 + 1 ;end elseif (v99>70) then local v314=v98[2];local v315,v316=v89(v96[v314](v21(v96,v314 + 1 + 0 ,v98[3])));v91=(v316 + v314) -1 ;local v317=0;for v367=v314,v91 do local v368=0;while true do if (v368==0) then v317=v317 + 1 ;v96[v367]=v315[v317];break;end end end else local v318=0;local v319;while true do if (v318==0) then v319=v98[2];do return v21(v96,v319,v91);end break;end end end elseif (v99<=83) then if (v99<=77) then if (v99<=(1548 -(1329 + 145))) then if (v99<=72) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==73) then local v321=0;local v322;local v323;local v324;while true do if (v321==2) then if (v323>0) then if (v324<=v96[v322 + 1 ]) then local v500=0;while true do if (v500==0) then v90=v98[3];v96[v322 + 3 ]=v324;break;end end end elseif (v324>=v96[v322 + 1 ]) then local v501=0;while true do if (0==v501) then v90=v98[3];v96[v322 + 3 ]=v324;break;end end end break;end if (v321==1) then v324=v96[v322] + v323 ;v96[v322]=v324;v321=2;end if (0==v321) then v322=v98[2];v323=v96[v322 + 2 ];v321=1;end end else v96[v98[2]]=v96[v98[974 -(140 + 831) ]][v98[4]];end elseif (v99<=75) then v90=v98[3];elseif (v99==76) then if  not v96[v98[1852 -(1409 + 441) ]] then v90=v90 + (3 -2) ;else v90=v98[3];end else v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;end elseif (v99<=80) then if (v99<=(96 -(10 + 8))) then v96[v98[2]]=v96[v98[721 -(15 + 703) ]]%v98[2 + 2 ] ;elseif (v99>(517 -(262 + 176))) then local v328=0;local v329;while true do if (0==v328) then v329=v98[2];do return v21(v96,v329,v91);end break;end end elseif (v98[1723 -(345 + 1376) ]==v96[v98[15 -11 ]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=81) then local v197=v87[v98[445 -(416 + 26) ]];local v198;local v199={};v198=v18({},{[v7("\45\31\49\114\184\113\10","\20\114\64\88\28\220")]=function(v216,v217) local v218=v199[v217];return v218[1][v218[2]];end,[v7("\14\62\220\177\239\217\179\53\4\202","\221\81\97\178\212\152\176")]=function(v219,v220,v221) local v222=v199[v220];v222[1][v222[2]]=v221;end});for v224=1,v98[4] do local v225=0;local v226;while true do if (0==v225) then v90=v90 + 1 ;v226=v86[v90];v225=1;end if (1==v225) then if (v226[3 -2 ]==(24 + 30)) then v199[v224-1 ]={v96,v226[3]};else v199[v224-1 ]={v73,v226[3]};end v95[ #v95 + 1 ]=v199;break;end end end v96[v98[3 -1 ]]=v40(v197,v198,v74);elseif (v99==82) then local v330=0;local v331;local v332;while true do if (0==v330) then v331=v98[8 -6 ];v332=v96[v331];v330=1;end if (v330==1) then for v462=v331 + (2 -1) ,v91 do v15(v332,v96[v462]);end break;end end else local v333=v98[1208 -(696 + 510) ];v96[v333](v21(v96,v333 + (1 -0) ,v91));end elseif (v99<=89) then if (v99<=(1348 -(1091 + 171))) then if (v99<=84) then v96[v98[1 + 1 ]]=v96[v98[3]]%v98[12 -8 ] ;elseif (v99==85) then local v334=v98[3];local v335=v96[v334];for v369=v334 + 1 ,v98[4] do v335=v335   .. v96[v369] ;end v96[v98[2]]=v335;else v96[v98[2]]={};end elseif (v99<=87) then do return;end elseif (v99==88) then v96[v98[2]]=v98[3];else local v340=0;local v341;while true do if (0==v340) then v341=v98[2];v96[v341]=v96[v341](v21(v96,v341 + (3 -2) ,v98[3]));break;end end end elseif (v99<=92) then if (v99<=90) then local v202=0;local v203;local v204;while true do if (v202==0) then v203=v98[377 -(123 + 251) ];v204=v96[v203];v202=1;end if (v202==1) then for v393=v203 + 1 ,v98[4] do v204=v204   .. v96[v393] ;end v96[v98[2]]=v204;break;end end elseif (v99==91) then local v342=0;local v343;local v344;while true do if (v342==1) then for v463=v343 + 1 ,v91 do v15(v344,v96[v463]);end break;end if (v342==0) then v343=v98[2];v344=v96[v343];v342=1;end end else v96[v98[440 -(145 + 293) ]]=v96[v98[3]] + v98[434 -(44 + 386) ] ;end elseif (v99<=(791 -(208 + 490))) then v96[v98[2]]();elseif (v99==94) then local v346=0;local v347;local v348;while true do if (v346==0) then v347=v98[2];v348=v96[v98[1489 -(998 + 488) ]];v346=1;end if (v346==1) then v96[v347 + 1 ]=v348;v96[v347]=v348[v98[4]];break;end end else local v349=0;local v350;while true do if (v349==0) then v350=v98[2];v96[v350]=v96[v350](v21(v96,v350 + 1 ,v98[3]));break;end end end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return v23("LOL!0D3Q0003063Q00737472696E6703043Q006368617203043Q00627974652Q033Q0073756203053Q0062697433322Q033Q0062697403043Q0062786F7203053Q007461626C6503063Q00636F6E63617403063Q00696E7365727403053Q006D6174636803083Q00746F6E756D62657203053Q007063612Q6C00243Q0012403Q00013Q00204A5Q0002001240000100013Q00204A000100010003001240000200013Q00204A000200020004001240000300053Q00062B0003000A0001000100044B3Q000A0001001240000300063Q00204A000400030007001240000500083Q00204A000500050009001240000600083Q00204A00060006000A00061400073Q000100062Q00363Q00064Q00368Q00363Q00044Q00363Q00014Q00363Q00024Q00363Q00053Q001240000800013Q00204A00080008000B0012400009000C3Q001240000A000D3Q000614000B0001000100052Q00363Q00074Q00363Q00094Q00363Q00084Q00363Q000A4Q00363Q000B4Q0005000C000B4Q0020000C00014Q0046000C6Q00573Q00013Q00023Q00023Q00026Q00F03F026Q00704002264Q005600025Q001258000300014Q004300045Q001258000500013Q0004250003002100012Q001000076Q0005000800024Q0010000900014Q0010000A00024Q0010000B00034Q0010000C00044Q0005000D6Q0005000E00063Q002033000F000600012Q0008000C000F4Q000A000B3Q00022Q0010000C00034Q0010000D00044Q0005000E00014Q0043000F00014Q0026000F0006000F00100B000F0001000F2Q0043001000014Q002600100006001000100B0010000100100020330010001000012Q0008000D00104Q003C000C6Q000A000A3Q000200204E000A000A00022Q002A0009000A4Q003E00073Q00010004490003000500012Q0010000300054Q0005000400024Q002C000300044Q004600036Q00573Q00017Q00043Q00027Q004003053Q003A25642B3A2Q033Q0025642B026Q00F03F001C3Q0006145Q000100012Q00218Q0010000100014Q0010000200024Q0010000300024Q005600046Q0010000500034Q000500066Q0006000700074Q0008000500074Q005B00043Q000100204A000400040001001258000500024Q005F000300050002001258000400034Q0008000200044Q000A00013Q0002002613000100180001000400044B3Q001800012Q000500016Q005600026Q002C000100024Q004600015Q00044B3Q001B00012Q0010000100044Q0020000100014Q004600016Q00573Q00013Q00013Q007F3Q00030A3Q006C6F6164737472696E6703043Q0067616D6503073Q00482Q7470476574031C3Q008D57BCB79619E7E8964ABAAE9050E6AA804DBDE89742B1A18C46A4A303043Q00C7E523C8030C3Q0043726561746557696E646F7703043Q0006122Q7903043Q001C487314030E3Q00536B696269646977617265E284A2030C3Q001816BED5D683DB0010ABDDDA03073Q00BC5479DFB1BFED030F3Q00EDB457CD88CFBC65DC83D5B242C58403053Q00E1A1DB36A9030B3Q007D3151200940231066017403073Q005A30503545292203133Q0008B3CDD1FA2CA9D1D6E722B3CDE4F23DB5CDD003053Q00934BDCA3B703073Q000FD703B887072E03063Q00624AB962DAEB0100030A3Q008CC430231CB8E53D2A1C03053Q0079CAAB5C470003083Q00748125C402DF5F8D03063Q00BE32E849A14C03073Q00ADD8494A1FA9DC03053Q007EDBB9223D03073Q0028C74D2Q7165F703083Q00876CAE3E121E179303073Q0093E72BC914AB3703083Q00A7D6894AAB78CE5303063Q00A2FE2454ECA203063Q00C7EB90523D98030A3Q00552E8D1F09048D3C5F3B03043Q004B6776D9030D3Q00F5517D11B41CC2465A1BB010D403063Q007EA7341074D92Q0103093Q00E32B39B3AD0AE8CD2303073Q009CA84E40E0D479030B3Q002CEBBCFD02FAB1C709E9B603043Q00AE678EC503053Q0062214B342003073Q009836483F58453E030E3Q00F1CAFA59C684F753C1D6AE77D1DD03043Q003CB4A48E03083Q006B4B073D2EF91E5D03073Q0072383E6549478D030A3Q0093ECC2848BF0C8D0BDE403043Q00A4D889BB03043Q00FCE925B703073Q006BB28651D2C69E03193Q00160B87C2EA394E89C3B3674EA3D5A1782E8ADEB32B1A90CFAB03053Q00CA586EE2A603083Q00E5068EF2E4C2028703053Q00AAA36FE29703063Q002707B32D5A3F03073Q00497150D2582E5703073Q00B22DDB17CC843503053Q0087E14CAD72030F3Q003DFFB9B287B8BE3CFFB7BD9FB4B31F03073Q00C77A8DD8D0CCDD2Q033Q0086D80903063Q0096CDBD709018030A3Q003C8BB6581785144177D703083Q007045E4DF2C64E87103093Q00437265617465546162030D3Q00E31A06C3B972C6F71009D5BF7B03073Q00E6B47F67B3D61C03083Q00AA0C4D43D640F48903073Q0080EC653F268421027B14AE47E17A943F03093Q008AA003419BFEC3B8A003073Q00AFCCC97124D68B026Q00F03F030A3Q0074DC27D90543EE34CF0103053Q006427AC55BC02FCA9F1D24D62503F03083Q008C75B48F10A171A903053Q0053CD18D9E0025Q00388F40030D3Q00C2C4C03CE1C0E938E0C4D831F203043Q005D86A5AD026Q00594003073Q0093F3D9E337C3BD03083Q001EDE92A1A25AAED203083Q00C147631EE440730F03043Q006A852E10024Q00F069F840030E3Q007A357FF05F546E257FF359494C3903063Q00203840139C3A025Q0088B340030C3Q0078DDE95A5FE6B34ADAE0575E03073Q00E03AA885363A92028Q0003053Q007061697273030B3Q00437265617465496E70757403043Q00752FB95303053Q002D3B4ED436030F3Q00205A82888326A2FC145391BF8336B903083Q00907036E3EBE64ECD03083Q00746F737472696E6703083Q00902903F0D25AB02303063Q003BD3486F9CB0030C3Q0043726561746542752Q746F6E03043Q007EBBCCBE03043Q00DB30DAA1030D3Q00C5616C45C20FC3EC70724EDE5C03073Q008084111C29BB2F03083Q0022330A365F00310D03053Q003D6152665A03063Q004E6F7469667903053Q009827BF47C203083Q0069CC4ECB2BA7377E030A3Q00829F0A5E3F0BC655A0AE03083Q0031C5CA437E7364A703073Q001454D13D85584A03073Q003E573BBF49E03603333Q00DE0DEF89E403F489E90DED89E606F0DCF416BADDEF07BADEE203EAC6E942F9C6E904F3CEF210FBDDEE0DF489F103F6DCE211BB03043Q00A987629A03083Q00EF623655E93AC7C503073Q00A8AB1744349D53026Q00144003073Q00506C6179657273030B3Q004C6F63616C506C61796572030E3Q00436861726163746572412Q64656403073Q00436F2Q6E656374012A012Q0006033Q00282Q013Q00044B3Q00282Q01001240000100013Q001240000200023Q0020150002000200032Q001000045Q001258000500043Q001258000600054Q0008000400064Q003C00026Q000A00013Q00022Q000F0001000100020020150002000100062Q005600043Q00072Q001000055Q001258000600073Q001258000700084Q005F0005000700020020270004000500092Q001000055Q0012580006000A3Q0012580007000B4Q005F0005000700020020270004000500092Q001000055Q0012580006000C3Q0012580007000D4Q005F0005000700022Q001000065Q0012580007000E3Q0012580008000F4Q005F0006000800022Q003B0004000500062Q001000055Q001258000600103Q001258000700114Q005F0005000700022Q005600063Q00032Q001000075Q001258000800123Q001258000900134Q005F0007000900020020270006000700142Q001000075Q001258000800153Q001258000900164Q005F0007000900020020270006000700172Q001000075Q001258000800183Q001258000900194Q005F0007000900022Q001000085Q0012580009001A3Q001258000A001B4Q005F0008000A00022Q003B0006000700082Q003B0004000500062Q001000055Q0012580006001C3Q0012580007001D4Q005F0005000700022Q005600063Q00032Q001000075Q0012580008001E3Q0012580009001F4Q005F0007000900020020270006000700142Q001000075Q001258000800203Q001258000900214Q005F0007000900022Q001000085Q001258000900223Q001258000A00234Q005F0008000A00022Q003B0006000700082Q001000075Q001258000800243Q001258000900254Q005F0007000900020020270006000700262Q003B0004000500062Q001000055Q001258000600273Q001258000700284Q005F0005000700020020270004000500262Q001000055Q001258000600293Q0012580007002A4Q005F0005000700022Q005600063Q00072Q001000075Q0012580008002B3Q0012580009002C4Q005F0007000900022Q001000085Q0012580009002D3Q001258000A002E4Q005F0008000A00022Q003B0006000700082Q001000075Q0012580008002F3Q001258000900304Q005F0007000900022Q001000085Q001258000900313Q001258000A00324Q005F0008000A00022Q003B0006000700082Q001000075Q001258000800333Q001258000900344Q005F0007000900022Q001000085Q001258000900353Q001258000A00364Q005F0008000A00022Q003B0006000700082Q001000075Q001258000800373Q001258000900384Q005F0007000900022Q001000085Q001258000900393Q001258000A003A4Q005F0008000A00022Q003B0006000700082Q001000075Q0012580008003B3Q0012580009003C4Q005F0007000900020020270006000700262Q001000075Q0012580008003D3Q0012580009003E4Q005F0007000900020020270006000700142Q001000075Q0012580008003F3Q001258000900404Q005F0007000900022Q005600086Q001000095Q001258000A00413Q001258000B00424Q00080009000B4Q005B00083Q00012Q003B0006000700082Q003B0004000500062Q005F0002000400020020150003000200432Q001000055Q001258000600443Q001258000700454Q0008000500074Q000A00033Q00022Q005600043Q00092Q001000055Q001258000600463Q001258000700474Q005F0005000700020020270004000500482Q001000055Q001258000600493Q0012580007004A4Q005F00050007000200202700040005004B2Q001000055Q0012580006004C3Q0012580007004D4Q005F00050007000200202700040005004E2Q001000055Q0012580006004F3Q001258000700504Q005F0005000700020020270004000500512Q001000055Q001258000600523Q001258000700534Q005F0005000700020020270004000500542Q001000055Q001258000600553Q001258000700564Q005F0005000700020020270004000500512Q001000055Q001258000600573Q001258000700584Q005F0005000700020020270004000500592Q001000055Q0012580006005A3Q0012580007005B4Q005F00050007000200202700040005005C2Q001000055Q0012580006005D3Q0012580007005E4Q005F00050007000200202700040005005F00061400053Q000100032Q00218Q00363Q00044Q00363Q00013Q00061400060001000100012Q00363Q00053Q001240000700604Q0005000800044Q002D00070002000900044B3Q00F10001002015000C000300612Q0056000E3Q00032Q0010000F5Q001258001000623Q001258001100634Q005F000F001100022Q003B000E000F000A2Q0010000F5Q001258001000643Q001258001100654Q005F000F00110002001240001000664Q00050011000B4Q001A0010000200022Q003B000E000F00102Q0010000F5Q001258001000673Q001258001100684Q005F000F0011000200061400100002000100042Q00363Q00044Q00363Q000A4Q00363Q00014Q00218Q003B000E000F00102Q000E000C000E00012Q0029000A5Q000630000700D60001000200044B3Q00D600010020150007000300692Q005600093Q00022Q0010000A5Q001258000B006A3Q001258000C006B4Q005F000A000C00022Q0010000B5Q001258000C006C3Q001258000D006D4Q005F000B000D00022Q003B0009000A000B2Q0010000A5Q001258000B006E3Q001258000C006F4Q005F000A000C00022Q003B0009000A00062Q000E0007000900010020150007000100702Q005600093Q00032Q0010000A5Q001258000B00713Q001258000C00724Q005F000A000C00022Q0010000B5Q001258000C00733Q001258000D00744Q005F000B000D00022Q003B0009000A000B2Q0010000A5Q001258000B00753Q001258000C00764Q005F000A000C00022Q0010000B5Q001258000C00773Q001258000D00784Q005F000B000D00022Q003B0009000A000B2Q0010000A5Q001258000B00793Q001258000C007A4Q005F000A000C00020020270009000A007B2Q000E000700090001001240000700023Q00204A00070007007C00204A00070007007D00204A00070007007E00201500070007007F00061400090003000100012Q00363Q00054Q000E0007000900012Q002900015Q00044B3Q00292Q0100204A00013Q004B2Q00573Q00013Q00043Q00453Q0003043Q0067616D6503073Q00506C6179657273030B3Q004C6F63616C506C61796572030E3Q0046696E6446697273744368696C6403083Q007B5748F66587840003083Q006B39362B9D15E6E7028Q0003063Q00697061697273030B3Q004765744368696C6472656E2Q033Q0049734103043Q00EF841EF903073Q00AFBBEB7195D9BC030C3Q0011A08559EF7C4B3FBD885CF703073Q00185CCFE12C831903053Q007063612Q6C03073Q007265717569726503043Q007479706503053Q005FD2BA401E03063Q001D2BB3D82C7B027Q0040026Q00F03F03063Q00537072656164030A3Q0053707265616442617365030F3Q0053696D756C6174696F6E5374617473030A3Q004261736544616D616765030D3Q0044616D61676544656661756C742Q033Q00526F4603083Q004669726552617465026Q00084003073Q004D6178412Q6D6F03083Q0044697374616E636503043Q00412Q6D6F03083Q00412Q6D6F436C697003083Q0056656C6F63697479030E3Q0042752Q6C657456656C6F63697479030C3Q0042752Q6C657453707265616403053Q007072696E7403093Q0090D62445BBD02548E703043Q002CDDB94003043Q004E616D6503023Q0008E903053Q00136187283F03093Q00466972654D756C746903043Q007761726E03113Q00885D3A372A35EE483C7B223EAA5535227503063Q0051CE3C535B4F03023Q0047A503083Q00C42ECBB0124FA32D03063Q004E6F7469667903053Q008C2B6A122103073Q008FD8421E7E449B03153Q009DCD0CDBCAAD97C2A5C60B2QC2E3E2F1AEC919CEC103083Q0081CAA86DABA5C3B703073Q00015739CCDB1AF203073Q0086423857B8BE7403213Q001D3D05FB0EEE2025333F1AFB10E5613C32270CB50DE4332C7C2419BF18FF24317203083Q00555C5169DB798B4103083Q00D9A6424468D6F2BD03063Q00BF9DD330251C026Q00144003053Q00EB16E0103F03053Q005ABF7F947C03123Q005A862D1C68862D1C38A9210338A12102768303043Q007718E74E03073Q00A122AB5ED94E0503073Q0071E24DC52ABC20031B3Q00436F756C646E27742066696E6420746865204261636B7061636B2E03083Q001E03E6B42E1FFBBB03043Q00D55A769400EF3Q0012403Q00013Q00204A5Q000200204A5Q00030020155Q00042Q001000025Q001258000300053Q001258000400064Q0008000200044Q000A5Q00020006033Q00D700013Q00044B3Q00D70001001258000100073Q0026130001000C0001000700044B3Q000C0001001240000200083Q00201500033Q00092Q002A000300044Q004400023Q000400044B3Q00B7000100201500070006000A2Q001000095Q001258000A000B3Q001258000B000C4Q00080009000B4Q000A00073Q0002000603000700B700013Q00044B3Q00B70001001240000700083Q0020150008000600092Q002A000800094Q004400073Q000900044B3Q00B50001002015000C000B000A2Q0010000E5Q001258000F000D3Q0012580010000E4Q0008000E00104Q000A000C3Q0002000603000C00B500013Q00044B3Q00B50001001258000C00074Q0006000D000E3Q000E480007002A0001000C00044B3Q002A0001001240000F000F3Q001240001000104Q00050011000B4Q001F000F001100102Q0005000E00104Q0005000D000F3Q000603000D00A700013Q00044B3Q00A70001001240000F00114Q00050010000E4Q001A000F000200022Q001000105Q001258001100123Q001258001200134Q005F001000120002000635000F00A70001001000044B3Q00A70001001258000F00073Q002613000F005A0001001400044B3Q005A0001001258001000073Q0026130010004C0001001500044B3Q004C00012Q0010001100013Q00204A001100110017001012000E0016001100204A0011000E001800062B0011004A0001000100044B3Q004A00012Q005600115Q001012000E00180011001258001000143Q002613001000550001000700044B3Q005500012Q0010001100013Q00204A00110011001A001012000E001900112Q0010001100013Q00204A00110011001C001012000E001B0011001258001000153Q002613001000410001001400044B3Q00410001001258000F001D3Q00044B3Q005A000100044B3Q00410001002613000F00740001001500044B3Q00740001001258001000073Q002613001000660001000700044B3Q006600012Q0010001100013Q00204A00110011001E001012000E001E00112Q0010001100013Q00204A00110011001A001012000E001A0011001258001000153Q0026130010006A0001001400044B3Q006A0001001258000F00143Q00044B3Q007400010026130010005D0001001500044B3Q005D00012Q0010001100013Q00204A00110011001F001012000E001F00112Q0010001100013Q00204A001100110021001012000E00200011001258001000143Q00044B3Q005D0001002613000F008B0001001D00044B3Q008B000100204A0010000E00182Q0010001100013Q00204A00110011002300101200100022001100204A0010000E00182Q0010001100013Q00204A001100110024001012001000160011001240001000254Q001000115Q001258001200263Q001258001300274Q005F00110013000200204A0012000B00282Q001000135Q001258001400293Q0012580015002A4Q005F00130015000200204A0014000600282Q000E00100014000100044B3Q00B50001002613000F003E0001000700044B3Q003E0001001258001000073Q002613001000920001001400044B3Q00920001001258000F00153Q00044B3Q003E00010026130010009B0001000700044B3Q009B00012Q0010001100013Q00204A00110011001C001012000E001C00112Q0010001100013Q00204A00110011002B001012000E002B0011001258001000153Q000E480015008E0001001000044B3Q008E00012Q0010001100013Q00204A001100110017001012000E001700112Q0010001100013Q00204A001100110021001012000E00210011001258001000143Q00044B3Q008E000100044B3Q003E000100044B3Q00B50001001240000F002C4Q001000105Q0012580011002D3Q0012580012002E4Q005F00100012000200204A0011000B00282Q001000125Q0012580013002F3Q001258001400304Q005F00120014000200204A0013000600282Q000E000F0013000100044B3Q00B5000100044B3Q002A0001000630000700200001000200044B3Q00200001000630000200130001000200044B3Q001300012Q0010000200023Q0020150002000200312Q005600043Q00032Q001000055Q001258000600323Q001258000700334Q005F0005000700022Q001000065Q001258000700343Q001258000800354Q005F0006000800022Q003B0004000500062Q001000055Q001258000600363Q001258000700374Q005F0005000700022Q001000065Q001258000700383Q001258000800394Q005F0006000800022Q003B0004000500062Q001000055Q0012580006003A3Q0012580007003B4Q005F00050007000200202700040005003C2Q000E00020004000100044B3Q00EE000100044B3Q000C000100044B3Q00EE00012Q0010000100023Q0020150001000100312Q005600033Q00032Q001000045Q0012580005003D3Q0012580006003E4Q005F0004000600022Q001000055Q0012580006003F3Q001258000700404Q005F0005000700022Q003B0003000400052Q001000045Q001258000500413Q001258000600424Q005F0004000600020020270003000400432Q001000045Q001258000500443Q001258000600454Q005F00040006000200202700030004003C2Q000E0001000300012Q00573Q00019Q003Q00034Q00108Q00013Q000100012Q00573Q00017Q00103Q00028Q00026Q00F03F03083Q00746F6E756D62657203063Q004E6F7469667903053Q007A8EF7214B03043Q004D2EE783030D3Q00935AA041B65DB200935AA655AE03043Q0020DA34D603073Q006D183FBCF4BE5103083Q003A2E7751C891D025031F3Q001B8035ADBAB8762E8224A9BBFD376B9A312QA0B9763D8D3CB9ACFD30249E7003073Q00564BEC50CCC9DD03013Q002E03083Q0056546584EA827D4F03063Q00EB122117E59E026Q001440013A3Q001258000100014Q0006000200033Q002613000100330001000200044B3Q00330001002613000200040001000100044B3Q00040001001240000400034Q000500056Q001A0004000200022Q0005000300043Q0006030003001200013Q00044B3Q00120001000E0D000100120001000300044B3Q001200012Q001000046Q0010000500014Q003B00040005000300044B3Q003900012Q0010000400023Q0020150004000400042Q005600063Q00032Q0010000700033Q001258000800053Q001258000900064Q005F0007000900022Q0010000800033Q001258000900073Q001258000A00084Q005F0008000A00022Q003B0006000700082Q0010000700033Q001258000800093Q0012580009000A4Q005F0007000900022Q0010000800033Q0012580009000B3Q001258000A000C4Q005F0008000A00022Q0010000900013Q001258000A000D4Q005A00080008000A2Q003B0006000700082Q0010000700033Q0012580008000E3Q0012580009000F4Q005F0007000900020020270006000700102Q000E00040006000100044B3Q0039000100044B3Q0004000100044B3Q00390001000E48000100020001000100044B3Q00020001001258000200014Q0006000300033Q001258000100023Q00044B3Q000200012Q00573Q00017Q00033Q00028Q0003043Q0077616974027B14AE47E17A843F000B3Q0012583Q00013Q0026133Q00010001000100044B3Q00010001001240000100023Q001258000200034Q00090001000200012Q001000016Q000100010001000100044B3Q000A000100044B3Q000100012Q00573Q00017Q00",v17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
